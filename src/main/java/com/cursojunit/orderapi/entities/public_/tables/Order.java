/*
 * This file is generated by jOOQ.
*/
package com.cursojunit.orderapi.entities.public_.tables;


import com.cursojunit.orderapi.entities.public_.Keys;
import com.cursojunit.orderapi.entities.public_.Public;
import com.cursojunit.orderapi.entities.public_.tables.records.OrderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Order extends TableImpl<OrderRecord> {

    private static final long serialVersionUID = 1959801031;

    /**
     * The reference instance of <code>PUBLIC.ORDER</code>
     */
    public static final Order ORDER = new Order();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderRecord> getRecordType() {
        return OrderRecord.class;
    }

    /**
     * The column <code>PUBLIC.ORDER.ORDERID</code>.
     */
    public final TableField<OrderRecord, Integer> ORDERID = createField("ORDERID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_7DC84B86_7D62_4E8F_BE97_AA7719BFC85A)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.ORDER.CUSTOMERID</code>.
     */
    public final TableField<OrderRecord, Integer> CUSTOMERID = createField("CUSTOMERID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ORDER.AMOUNT</code>.
     */
    public final TableField<OrderRecord, BigDecimal> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 2).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ORDER.SKU</code>.
     */
    public final TableField<OrderRecord, String> SKU = createField("SKU", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ORDER.QUANTITY</code>.
     */
    public final TableField<OrderRecord, Integer> QUANTITY = createField("QUANTITY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ORDER.VALUE</code>.
     */
    public final TableField<OrderRecord, BigDecimal> VALUE = createField("VALUE", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 2).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ORDER.CREATIONDATE</code>.
     */
    public final TableField<OrderRecord, Timestamp> CREATIONDATE = createField("CREATIONDATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.ORDER</code> table reference
     */
    public Order() {
        this("ORDER", null);
    }

    /**
     * Create an aliased <code>PUBLIC.ORDER</code> table reference
     */
    public Order(String alias) {
        this(alias, ORDER);
    }

    private Order(String alias, Table<OrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Order(String alias, Table<OrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Order as(String alias) {
        return new Order(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Order rename(String name) {
        return new Order(name, null);
    }
}
